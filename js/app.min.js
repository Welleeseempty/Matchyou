/* GSAP */
/* Активация плагинов */
gsap.registerPlugin(ScrollTrigger, ScrollSmoother)
/* /Активация плагинов */

/* Общая анимация скролла */
let scroller = ScrollSmoother.create({
	wrapper: '#smooth-wrapper',
	content: '#smooth-content',
	smooth: 2,
	// normalizeScroll: true,
	ignoreMobileResize: true,
	effects: true,
	smoothTouch: 1,
	preventDefault: true
});
/* /Общая анимация скролла */

/* Timeline for page-header section */
var tl2 = gsap.timeline({ defaults: { scale: 1, x: 0, y: 0, opacity: 1, duration: .7, ease: "" } });
let itemsT = gsap.utils.toArray('.page-header')
itemsT.forEach(item => {
	tl2.fromTo(item, { opacity: .8, scale: .9 }, {
		
	})
})
let itemsL = gsap.utils.toArray('.page-header .page-header__title')
itemsL.forEach(item => {
	tl2.fromTo(item, { opacity: 0, y: -50 }, {
		'clip-path': 'polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%)',
	})
})
let itemsR = gsap.utils.toArray('.page-header .page-header__desc')
itemsR.forEach(item => {
	tl2.fromTo(item, { opacity: 0, x: 50 }, {
		'clip-path': 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)',
	})
})
let itemsЕ = gsap.utils.toArray('.page-header .page-header-btn')
itemsЕ.forEach(item => {
	tl2.fromTo(item, { opacity: 0, y: -50 }, {
		ease: 'bounce.out',
	})
})
/* /Timeline for page-header section */

/* Анимации для десктопных устройств */
const laptopScreen = window.matchMedia('(min-width: 768px)')
if (laptopScreen.matches) {
	/* Анимация скролла для конкретных блоков */
	scroller.effects(".objects-wrapper", {speed: 1.1, lag: 0.1});
	/* /Анимация скролла для конкретных блоков */

	/* Text Reveal Animation */
	const splitTypes = document.querySelectorAll('.reveal-text')
	splitTypes.forEach((char,i) => {
		const text = new SplitType(char, { types: 'chars'})
		gsap.from(text.chars, {
			opacity: 0.2,
			stagger: 0.2,
			scrollTrigger: {
				trigger: char,
				start: 'top 60%',
				end: 'top 20%',
				markers: false,
				scrub: true,
				once: true,
				// pin: true,
				// pin: '.className',
			}
		})
	})
	/* /Text Reveal Animation */

	/* Timeline for objects section */
	var tl = gsap.timeline({ defaults: { opacity: 1, x: 0, y: 0 } });
		let itemsU = gsap.utils.toArray('.objects-wrapper2 .objects-btn')
		itemsU.forEach(item => {
			tl.fromTo(item, { x: -200 }, {
				ease: '',
				scrollTrigger: {
					trigger: item,
					start: 'top bottom',
					end: '+=400',
					markers: false,
					scrub: true,
					once: true,
					// pin: true,
					// pin: '.className',
				}
			})
		})
		let itemsI = gsap.utils.toArray('.objects-card')
		itemsI.forEach(item => {
			tl.fromTo(item, { y: 100, opacity: 0 }, {
				// ease: '',
				scrollTrigger: {
					trigger: item,
					start: 'center bottom',
					// end: '+=400',
					markers: false,
					// scrub: true,
					once: false,
					// pin: true,
					// pin: '.className',
				}
			})
			ScrollTrigger.batch(".objects-card", {
				onEnter: batch => gsap.to(batch, {opacity: 1, y: 0, stagger: {each: 0.3, grid: [1, 3]}, overwrite: true}),
				onLeave: batch => gsap.set(batch, {opacity: 0, y: -100, overwrite: true}),
				onEnterBack: batch => gsap.to(batch, {opacity: 1, y: 0, stagger: 0.3, overwrite: true}),
				onLeaveBack: batch => gsap.set(batch, {opacity: 0, y: 100, overwrite: true})
			})
		})
	/* /Timeline for objects section */

	/* Timeline for info section */
	var tl3 = gsap.timeline({ defaults: { scale: 1, opacity: 1, y: 0 }});
		let itemsO = gsap.utils.toArray('.info .info-wrapper__img ')
		itemsO.forEach(item => {
			tl3.fromTo(item, { opacity: 0, scale: .8, }, {
				ease: '',
				scrollTrigger: {
					trigger: item,
					start: 'top bottom',
					end: '+=600',
					markers: true,
					scrub: true,
					// once: true,
					// pin: true,
					// pin: '.className',
				}
			})
		})
		let itemsP = gsap.utils.toArray('.info .section-title')
		itemsP.forEach(item => {
			tl3.fromTo(item, { opacity: 0, y: 50 }, {
				'clip-path': 'polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%)',
				scrollTrigger: {
					trigger: item,
					start: 'top bottom',
					end: '+=400',
					markers: true,
					scrub: true,
					once: true,
					// pin: true,
					// pin: '.className',
				}
			})
		})
		let itemsA = gsap.utils.toArray('.info .section-subtitle')
		itemsA.forEach(item => {
			tl3.fromTo(item, { opacity: 0, y: 50 }, {
				scrollTrigger: {
					trigger: item,
					start: 'top bottom',
					end: '+=400',
					markers: false,
					scrub: true,
					// once: true,
					// pin: true,
					// pin: '.className',
				}
			})
		})
	/* /Timeline for info section */
}
/* /Анимации для десктопных устройств */

/* Анимации для мобильных устройств */
const mobileScreen = window.matchMedia('(max-width: 768px)')
if (mobileScreen.matches) {
	/* Анимация скролла для конкретных блоков */
	scroller.effects(".objects-wrapper", {speed: 1, lag: 0});
	/* /Анимация скролла для конкретных блоков */

	/* Timeline for objects section */
	var tl = gsap.timeline({ defaults: { opacity: 1, x: 0, y: 0 } });
		let itemsI = gsap.utils.toArray('.objects-card')
		itemsI.forEach(item => {
			tl.fromTo(item, { x: -50, opacity: 0 }, {
				// ease: '',
				scrollTrigger: {
					trigger: item,
					start: 'center bottom',
					// end: '+=400',
					markers: false,
					// scrub: true,
					once: false,
					// pin: true,
					// pin: '.className',
				}
			})
			ScrollTrigger.batch(".objects-card", {
				onEnter: batch => gsap.to(batch, {opacity: 1, x: 0, stagger: {each: 0.3, grid: [1, 3]}, overwrite: true}),
				onLeave: batch => gsap.set(batch, {opacity: 0, x: -50, overwrite: true}),
				onEnterBack: batch => gsap.to(batch, {opacity: 1, x: 0, stagger: 0.3, overwrite: true}),
				onLeaveBack: batch => gsap.set(batch, {opacity: 0, x: -50, overwrite: true})
			})
		})
		let itemsF = gsap.utils.toArray('.objects-premium .objects-card')
		itemsF.forEach(item => {
			tl.fromTo(item, { x: 50, opacity: 0 }, {
				// ease: '',
				scrollTrigger: {
					trigger: item,
					start: 'center bottom',
					// end: '+=400',
					markers: false,
					// scrub: true,
					once: false,
					// pin: true,
					// pin: '.className',
				}
			})
			ScrollTrigger.batch(".objects-premium .objects-card", {
				onEnter: batch => gsap.to(batch, {opacity: 1, x: 0, stagger: {each: 0.3, grid: [1, 3]}, overwrite: true}),
				onLeave: batch => gsap.set(batch, {opacity: 0, x: 50, overwrite: true}),
				onEnterBack: batch => gsap.to(batch, {opacity: 1, x: 0, stagger: 0.3, overwrite: true}),
				onLeaveBack: batch => gsap.set(batch, {opacity: 0, x: 50, overwrite: true})
			})
		})
	/* /Timeline for objects section */
}
/* /Анимации для мобильных устройств */
/* /GSAP */

/* Фиксация меню при скролле и dropdown */
jQuery(function($) {
    $(window).on('scroll', function() {
		if ($(this).scrollTop() >= 200) {
			$('.navbar').addClass('fixed-top');
		} else if ($(this).scrollTop() == 0) {
			$('.navbar').removeClass('fixed-top');
		}
	});
	
	function adjustNav() {
		var winWidth = $(window).width(),
			dropdown = $('.dropdown'),
			dropdownMenu = $('.dropdown-menu');
		
		if (winWidth >= 768) {
			dropdown.on('mouseenter', function() {
				$(this).addClass('show')
					.children(dropdownMenu).addClass('show');
			});
			
			dropdown.on('mouseleave', function() {
				$(this).removeClass('show')
					.children(dropdownMenu).removeClass('show');
			});
		} else {
			dropdown.off('mouseenter mouseleave');
		}
	}
	
	$(window).on('resize', adjustNav);
	
	adjustNav();
});
const showAnim = gsap.from('.navbar', { 
	yPercent: -100,
	paused: true,
	duration: 0
}).progress(1);
ScrollTrigger.create({
	start: "top top",
	end: 99999,
	onUpdate: (self) => {
		self.direction === -1 ? showAnim.play() : showAnim.reverse()
	}
});
/* /Фиксация меню при скролле и dropdown */

/* Маска для телефона */
$(document).ready(function() {
	$(".phone-input").mask("+7 (999) 999-99-99");
});
/* /Маска для телефона */

/* Антиспам */
$(function(){
	$('.protectedForm').append('<input type="text" name="org" value="" class="_org" style="visibility:hidden; height: 0; width: 0; padding: 0; border:none;"/>') 
}); 
/* /Антиспам */

/* Закрытие модального окна после отправки формы */
$(document).on('af_complete', function(event, response) {
    if (response.success) {
        $('#myModal').modal('hide');
    }
});
/* /Закрытие модального окна после отправки формы */

/* Конвертация из img в svg */
$('img.phone__icon').each(function(){
	var $img = $(this);
	var imgClass = $img.attr('class');
	var imgURL = $img.attr('src');
	$.get(imgURL, function(data) {
	var $svg = $(data).find('svg');
	if(typeof imgClass !== 'undefined') {
		$svg = $svg.attr('class', imgClass+' replaced-svg');
	}
	$svg = $svg.removeAttr('xmlns:a');
	if(!$svg.attr('viewBox') && $svg.attr('height') && $svg.attr('width')) {
		$svg.attr('viewBox', '0 0 ' + $svg.attr('height') + ' ' + $svg.attr('width'))
	}
	$img.replaceWith($svg);
	}, 'xml');
});
/* /Конвертация из img в svg */

/* Btn-up */
var progressPath = document.querySelector('.progress-wrap path');
var pathLength = progressPath.getTotalLength();
progressPath.style.transition = progressPath.style.WebkitTransition = 'none';
progressPath.style.strokeDasharray = pathLength + ' ' + pathLength;
progressPath.style.strokeDashoffset = pathLength;
progressPath.getBoundingClientRect();
progressPath.style.transition = progressPath.style.WebkitTransition = 'stroke-dashoffset 10ms linear';
var updateProgress = function () {
	var scroll = $(window).scrollTop();
	var height = $(document).height() - $(window).height();
	var progress = pathLength - (scroll * pathLength / height);
	progressPath.style.strokeDashoffset = progress;
}
updateProgress();
$(window).scroll(updateProgress);
var offset = 50;
var duration = 0;
jQuery(window).on('scroll', function() {
	if ($(window).width() > 1145) {
		if (jQuery(this).scrollTop() > offset) {
		jQuery('.progress-wrap').addClass('active-progress');
		} else {
		jQuery('.progress-wrap').removeClass('active-progress');
		}
	}
});
jQuery('.progress-wrap').on('click', function(event) {
	event.preventDefault();
	jQuery('html, body').animate({scrollTop: 0}, {duration: 0});
	return false;
})
/* /Btn-up */

/* Подсветка активного пункта меню */
$(function() {
	$('.menu [href]').each(function() {
		if (this.href == window.location.href) {
		$(this).addClass('active');
		}
	});
});
/* /Подсветка активного пункта меню */

/* Phone mask */
$(document).ready(function() {
	$(".phone-input").mask("+7 (999) 999-99-99");
});
/* /Phone mask */
